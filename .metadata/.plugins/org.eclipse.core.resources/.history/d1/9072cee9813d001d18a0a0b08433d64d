package br.com.sprint3.estados.config.security;

import org.springframework.context.annotation.Configuration;
import org.springframework.http.HttpMethod;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.builders.WebSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;

@EnableWebSecurity
@Configuration
public class SecurityConfigurations extends WebSecurityConfigurerAdapter{

	private AutenticacaoService autenticacaoService;
	
	//configuração de autenticação -> auth (controle de acesso, login, etc)
	@Override
	protected void configure(AuthenticationManagerBuilder auth) throws Exception {
		// TODO Auto-generated method stub
	auth.userDetailsService(autenticacaoService);
	}
	
	//configuraçãi de autorização (url, quem pode acessar, perfil de acesso)
	@Override
	protected void configure(HttpSecurity http) throws Exception {
		// TODO Auto-generated method stub
		http.authorizeRequests()
		.antMatchers(HttpMethod.GET,"/api/v1/estados").permitAll()
		.antMatchers(HttpMethod.GET,"/api/v1/estados/*").permitAll()
		.antMatchers(HttpMethod.POST,"/api/v1/usuarios").permitAll()
		.anyRequest().authenticated()
		.and().formLogin()
		;
	}
	
	//configuração de recurso estáticos (javascript, imagens, etc ) ->aplicação client
	@Override
	public void configure(WebSecurity web) throws Exception {
		// TODO Auto-generated method stub

	}
	
}
